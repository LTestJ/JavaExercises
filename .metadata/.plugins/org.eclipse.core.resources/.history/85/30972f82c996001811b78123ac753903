package Proj1;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardOpenOption;
import java.util.ArrayList;
import java.util.Scanner;

class Employee {
    public unsigned id;
    public String name;
    public String phone;
    public String address;
};

public class fileBasedDb {
	 /*
    We define the ArrayList here because we need methods
    in the class to access it. If we define the ArrayList
    in a method, only that method can access it.
 */
 ArrayList<Employee> employees = new Employee<Employee>();

 /*
    We don't want to take the database file name from user
 */
 String dbFileName = "employees.db";
	public static void main(String[] args) throws IOException {
        /*
        while(true) creates an infinite loop. We want to
        loop back until user choose the option to exit.
        When that happens we exit the loop explicitly
        by using System.exit()
      */
		while (true) {	
			int choice = showMenu();			 
			switch(choice) {
				case 1 :
					System.out.println("User pressed 1\n"); 
					createEmployee();
					//choice1Details();
					//writeToFile();
					readFrom();
				    break;
				case 2 : 
					System.out.println("User pressed 2\n"); 
					showEmployees();
				    break;
				case 3 :
					System.out.println("User pressed 3\n");
					showEmployeeDetail();
					break;
				case 4 :
					System.out.println("User pressed 4\n");
				case 5 :
					System.out.println("User pressed 5\n");
				    break;
				case 6 :
					System.out.println("Oops ... Exiting ...\n");
					System.exit(0);
				    break;
				default : 
				    System.out.println("Invalid Entry; Go again \n");
			} 
		}		
	}
    /*
    This function shows a menu to the user. Reads user input
    and returns the user choice as an integer from the function.
     */
	public static int showMenu() {
		System.out.println("1 - Create a new employee \n");
		System.out.println("2 - Show list of employees \n");
		System.out.println("3 - Show information about a specified employee \n");
		System.out.println("4 - Delete an employee \n");
		System.out.println("5 - Save to file \n");
		System.out.println("6 - Exit \n");
		System.out.println("Choose an option from the above: \n");
							
		Scanner scan = new Scanner(System.in);
		System.out.print("\nEnter option number here: ");
		int option = scan.nextInt();
		scan.close();
		return option;	
	}		
    /*
    This function gets details about the user and creates
    and Employee object and stores it in the in memory
    Employee list (ArrayList employees).
 */
	public static String createEmployee() throws IOException {
		Scanner scan = new Scanner(System.in);
		System.out.print("Enter your name: \n");
		String name = scan.next();		
		System.out.print("Thanks. Enter your phone# : \n");
		String phone = scan.next();		
		System.out.print("Thanks. Enter your address: \n");
		String address = scan.next();
		scan.close();
		
		/* Continue your code below here */
		
//		Scanner sc = new Scanner(System.in);              
//        System.out.println("Thank you! \nInput an existing fileName : \n");        
//        String fileName = sc.next(); 
//        //sc.close();                
 
//        //while ((name = scan.next()) != null)
//        Files.write(Paths.get(fileName), name.getBytes(StandardCharsets.UTF_8), 
//        		StandardOpenOption.CREATE); 
//        //while ((phone = scan.next()) != null)
//        Files.write(Paths.get(fileName), phone.getBytes(StandardCharsets.UTF_8), 
//        		StandardOpenOption.CREATE);
//        //while ((address = scan.next()) != null)
//        Files.write(Paths.get(fileName), address.getBytes(StandardCharsets.UTF_8), 
//        		StandardOpenOption.CREATE);
		return name;  
			
	}
	public static void writeToFile() throws IOException  {
		//to write to a file using bytes//
		Scanner sc = new Scanner(System.in);              
        System.out.println("Thank you! \nInput an existing fileName : \n");        
        String fileName = sc.next(); 
        sc.close();   
        
        String content = "This is my new contentxxx to asdff";
        Files.write(Paths.get(fileName), content.getBytes(StandardCharsets.UTF_8), 
        		StandardOpenOption.CREATE);        
	}
	
    /*
    Display the list of employees in the format
    employee id : employee name
  */
 
	public static void showEmployees() {
      /* Write your code below here */
	  
	  
	  
	  
	  
  }

  /*
    Funtion should take employee id as input from the user and
    prints the details about the employee in the following format:
    
    id      : employee id
    name    : employee name
    phone   : employee phone
    address : employee address
    
    Note how the output is aligned in colums
  */
  public static void showEmployeeDetail() {	  
      /* Write your code below here */
	  
	  
	  
	  
	  
	  
  }
//	public class ClassiscBufferedWriter {
//		//buffered writer does not use bytes
//		//Buffered Writer writes directly using characters
//		private static final String FILENAME = 
//		"C:\\Users\\josep\\src\\JavaExercises\\problem_set2\\BufferedWriter.txt";
//		//"E:\\test\\filename.txt";
//		public static void BufferedWrite () {
//			// cannot have multiple lines//
//			BufferedWriter bw = null;
//			FileWriter fw = null;
//
//			try {
//
//				String content = "\1st line \n"
//						+ "\nSecond line \n"
//						+ "\n third line \n";
//
//				fw = new FileWriter(FILENAME, true);
//				bw = new BufferedWriter(fw);
//				bw.write(content);
//				System.out.println("Done");
//
//			} catch (IOException e) {
//				e.printStackTrace();
//			} finally {
//				try {
//					if (bw != null)
//						bw.close();
//					if (fw != null)
//						fw.close();
//				} catch (IOException ex) {
//					ex.printStackTrace();
//				}
//			}	
//		}	
//	}
//	public static void readFrom() throws IOException {
//		//to read from the input file
//		Scanner sc = new Scanner(System.in);              
//        System.out.println("Thanks; Input your file name : \n");        
//        String fileName = sc.next(); 
//        sc.close();        
//        String content = new String(Files.readAllBytes(Paths.get(fileName)));
//        System.out.println(content);
//	}
}